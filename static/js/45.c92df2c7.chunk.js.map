{"version":3,"sources":["views/FrontOffice/Center/center.js","Services/ApiUser.js"],"names":["Landing","centers","setCenters","useState","currentPage","setCurrentPage","jwt_token","Cookies","get","config","useMemo","headers","Authorization","concat","loadCenters","useCallback","async","res","getCentre","data","users","error","console","useEffect","indexOfLastCenter","indexOfFirstCenter","currentCenters","slice","paginate","pageNumber","pageNumbers","i","Math","ceil","length","push","_jsx","_Fragment","children","className","_jsxs","map","center","Link","to","_id","alt","src","image_user","style","width","height","nom","preferences","domaine_actuelle","onClick","FaChevronLeft","disabled","number","FaChevronRight","apiURL","getUsers","axios","getAdmin","getFormateur","getModerateur","getSimpleUser","getUserActive","getUsersarchive","getUserDesactive","getUserConnecter","getUserDeConnecter","getUserByID","id","deleteUser","delete","upgrade","put","archiver","desarchiver","downgrade","active","desactive","upgradeModerateur","upgradeFormateur","updateUser","formData","updatecentre","UpdatePasswordByAdmin","user","UpdatePassword","getCentersByDomain","domaine","getInstructorsByCenter","centerId","affecterEnseignant","enseignantId","desinfecterFormateur"],"mappings":"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","file":"static/js/45.c92df2c7.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from \"react\";\r\n// components\r\nimport Cookies from \"js-cookie\";\r\nimport { FaChevronRight , FaChevronLeft  } from \"react-icons/fa\";\r\nimport { getCentre } from '../../../Services/ApiUser'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Landing() {\r\n  const [centers, setCenters] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const centersPerPage = 6;\r\n  const jwt_token = Cookies.get(\"jwt_token\");\r\n\r\n  const config = useMemo(() => {\r\n    return {\r\n      headers: {\r\n        Authorization: `Bearer ${jwt_token}`,\r\n      },\r\n    };\r\n  }, [jwt_token]);\r\n\r\n\r\n  const loadCenters = useCallback(async () => {\r\n    try {\r\n      const res = await getCentre(config);\r\n      setCenters(res.data.users);\r\n    } catch (error) {\r\n      console.error('Error loading centers:', error);\r\n    }\r\n  }, [config]);\r\n\r\n  useEffect(() => {\r\n    loadCenters();\r\n  }, [loadCenters]);\r\n\r\n  const indexOfLastCenter = currentPage * centersPerPage;\r\n  const indexOfFirstCenter = indexOfLastCenter - centersPerPage;\r\n  const currentCenters = centers.slice(indexOfFirstCenter, indexOfLastCenter);\r\n\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= Math.ceil(centers.length / centersPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  return (\r\n    <>\r\n      <section className=\"pb-20 bg-blueGray-200 -mt-24\">\r\n          <div className=\"container mx-auto px-4\">\r\n            <div className=\"flex flex-wrap\">\r\n              {currentCenters.map((center) => (\r\n                <div\r\n                  className=\"pt-6 w-full md:w-1/12 px-4 text-center\"\r\n                  key={center._id}\r\n                >\r\n                  <div className=\"relative flex flex-col min-w-0 break-words bg-white w-full mb-8 shadow-lg rounded-lg\">\r\n                    <div className=\"px-4 py-5 flex-auto\">\r\n                      <div className=\"hover:-mt-4 mt-1 relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-lg rounded-lg ease-linear transition-all duration-150\">\r\n                        <Link to={`/profile/ProfileCenter/${center._id}`}>\r\n                          <img\r\n                            alt=\"...\"\r\n                            className=\"align-middle border-none max-w-full h-auto rounded-lg\"\r\n                            src={`http://localhost:5000/images/Users/${center.image_user}`}\r\n                            // style={{ width: \"350px\", height: \"350px\" }}\r\n                            style={{ width: \"200px\", height: \"120px\" }}\r\n                          />\r\n                        </Link>\r\n                      </div>\r\n                      <h6 className=\"text-xl font-semibold\">\r\n                        {center.nom}\r\n                      </h6>\r\n                      <p className=\"mt-2 mb-4 text-blueGray-500\">\r\n                        {center.preferences && center.preferences.domaine_actuelle ? center.preferences.domaine_actuelle : \"Le centre ne prend pas en compte les d√©tails.\"}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"flex justify-center mt-8\">\r\n              <nav className=\"block\">\r\n                <ul className=\"flex pl-0 rounded list-none flex-wrap\">\r\n                  <li>\r\n                    <button\r\n                      onClick={() => paginate(1)}\r\n                      className={`text-xs font-semibold flex w-8 h-8 mx-1 p-0 rounded-full items-center justify-center leading-tight relative border border-solid border-lightBlue-200 text-white ${currentPage === 1 ? 'bg-lightBlue-500' : 'bg-white text-lightBlue-500'}`}\r\n                    >\r\n                      <FaChevronLeft />\r\n                      <FaChevronLeft />\r\n                    </button>\r\n                  </li>\r\n                  <li>\r\n                    <button\r\n                      onClick={() => paginate(currentPage - 1)}\r\n                      disabled={currentPage === 1}\r\n                      className={`text-xs font-semibold flex w-8 h-8 mx-1 p-0 rounded-full items-center justify-center leading-tight relative border border-solid border-lightBlue-200 text-white ${currentPage === 1 ? 'bg-lightBlue-500' : 'bg-white text-lightBlue-500'}`}\r\n                    >\r\n                      <FaChevronLeft />\r\n                    </button>\r\n                  </li>\r\n                  {pageNumbers.map((number) => (\r\n                    <li key={number}>\r\n                      <button\r\n                        onClick={() => paginate(number)}\r\n                        className={`text-xs font-semibold flex w-8 h-8 mx-1 p-0 rounded-full items-center justify-center leading-tight relative border border-solid border-lightBlue-200 text-white ${currentPage === number ? 'bg-lightBlue-500' : 'bg-white text-lightBlue-500'}`}\r\n                      >\r\n                        {number}\r\n                      </button>\r\n                    </li>\r\n                  ))}\r\n                  <li>\r\n                    <button\r\n                      onClick={() => paginate(currentPage + 1)}\r\n                      disabled={currentPage === Math.ceil(centers.length / centersPerPage)}\r\n                      className={`text-xs font-semibold flex w-8 h-8 mx-1 p-0 rounded-full items-center justify-center leading-tight relative border border-solid border-lightBlue-200 text-white ${currentPage === Math.ceil(centers.length / centersPerPage) ? 'bg-lightBlue-500' : 'bg-white text-lightBlue-500'}`}\r\n                    >\r\n                      <FaChevronRight />\r\n                    </button>\r\n                  </li>\r\n                  <li>\r\n                    <button\r\n                      onClick={() => paginate(Math.ceil(centers.length / centersPerPage))}\r\n                      className={`text-xs font-semibold flex w-8 h-8 mx-1 p-0 rounded-full items-center justify-center leading-tight relative border border-solid border-lightBlue-200 text-white ${currentPage === Math.ceil(centers.length / centersPerPage) ? 'bg-lightBlue-500' : 'bg-white text-lightBlue-500'}`}\r\n                    >\r\n                      <FaChevronRight />\r\n                      <FaChevronRight />\r\n                    </button>\r\n                  </li>\r\n                </ul>\r\n              </nav>\r\n            </div>\r\n          </div>\r\n        </section>\r\n    </>\r\n  );\r\n}\r\n","import axios from 'axios'\r\n\r\nconst apiURL = 'http://localhost:5000/user'\r\n\r\nexport async function getUserAuth (config) {\r\n  return await axios.get(`${apiURL}/`, config)\r\n}\r\n\r\nexport async function registerEmail (email) {\r\n  return await axios.post(`${apiURL}/verification`, email)\r\n}\r\n\r\nexport async function register (user) {\r\n  return await axios.post(`${apiURL}/inscrire`, user)\r\n}\r\n\r\nexport async function registerCentre (formData) {\r\n  return await axios.post(`${apiURL}/inscrireCentre`, formData, {\r\n    headers: { 'Content-Type': 'multipart/form-data' }, withCredentials: true,\r\n  })\r\n}\r\n\r\n\r\nexport async function forgetPassword (email) {\r\n  return await axios.put(`${apiURL}/forgetPassword`, { email })\r\n}\r\n\r\nexport async function Password (user, config) {\r\n  return await axios.put(`${apiURL}/Password`, { user, config, withCredentials: true })\r\n}\r\n\r\nexport async function logout (config,id) {\r\n  return await axios.get(`${apiURL}/logout/${id}`, {\r\n    config, withCredentials: true,\r\n  })\r\n}\r\n\r\nexport async function AddUserService(formData, config) {\r\n  return await axios.post(`${ apiURL }/register`, formData, config, {\r\n    headers: {\"Content-Type\": \"multipart/form-data\"}, withCredentials: true,\r\n  });\r\n}\r\n\r\n\r\n\r\nexport async function getUsers(config) {\r\n  return await axios.get(`${ apiURL }/AllUsers`, config);\r\n}\r\n\r\nexport async function getAdmin(config) {\r\n  return await axios.get(`${ apiURL }/AllAdmin`, config);\r\n}\r\n\r\nexport async function getFormateur(config) {\r\n  return await axios.get(`${ apiURL }/AllFormateur`, config);\r\n}\r\n\r\nexport async function getCentre(config) {\r\n  return await axios.get(`${ apiURL }/AllCentre`, config);\r\n}\r\n\r\nexport async function getModerateur(config) {\r\n  return await axios.get(`${ apiURL }/AllModerateur`, config);\r\n}\r\nexport async function getSimpleUser(config) {\r\n  return await axios.get(`${ apiURL }/AllSimpleUsers`, config);\r\n}\r\n\r\nexport async function getUserActive(config) {\r\n  return await axios.get(`${ apiURL }/AllUsersActive`, config);\r\n}\r\n\r\nexport async function getUsersarchive(config) {\r\n  return await axios.get(`${ apiURL }/AllUsersarchive`, config);\r\n}\r\n\r\nexport async function getUserDesactive(config) {\r\n  return await axios.get(`${ apiURL }/AllUsersDesactive`, config);\r\n}\r\n\r\nexport async function getUserConnecter(config) {\r\n  return await axios.get(`${ apiURL }/AllUsersConnecter`, config);\r\n}\r\n\r\nexport async function getUserDeConnecter(config) {\r\n  return await axios.get(`${ apiURL }/AllUsersDeConnecter`, config);\r\n}\r\n\r\nexport async function searchUsers(term,config) {\r\n  return await axios.get(`${ apiURL }/searchUsers?term=${ term }`, config);\r\n}\r\n\r\nexport async function getUserByID(id, config) {\r\n  return await axios.get(`${ apiURL }/User/${ id }`, config);\r\n}\r\n\r\nexport async function deleteUser(id, config) {\r\n  return await axios.delete(`${ apiURL }/${ id }`, config);\r\n}\r\n\r\nexport async function upgrade (id, config) {\r\n  return await axios.put(`${apiURL}/upgrade`, { id }, config)\r\n}\r\n\r\nexport async function archiver (id, config) {\r\n  return await axios.put(`${apiURL}/archiver`, { id }, config)\r\n}\r\n\r\nexport async function desarchiver (id, config) {\r\n  return await axios.put(`${apiURL}/desarchiver`, { id }, config)\r\n}\r\n\r\nexport async function downgrade(id, config) {\r\n  return await axios.put(`${ apiURL }/downgrade`, {id}, config);\r\n}\r\n\r\nexport async function active (id, config) {\r\n  return await axios.put(`${apiURL}/active`, { id }, config)\r\n}\r\n\r\nexport async function desactive(id, config) {\r\n  return await axios.put(`${ apiURL }/desactive`, {id}, config);\r\n}\r\n\r\nexport async function upgradeModerateur (id, config) {\r\n  return await axios.put(`${apiURL}/upgradeModerateur`, { id }, config)\r\n}\r\n\r\nexport async function upgradeFormateur (id, config) {\r\n  return await axios.put(`${apiURL}/upgradeFormateur`, { id }, config)\r\n}\r\n\r\nexport async function updateUser (formData, id, config) {\r\n  return await axios.put(`${apiURL}/update/${id}`, formData, config, {\r\n    headers: {\"Content-Type\": \"multipart/form-data\"}\r\n  });\r\n}\r\n\r\nexport async function updatecentre(formData, id, config) {\r\n  return await axios.put(`${ apiURL }/updatecentre/${ id }`, formData, config, {\r\n    headers: {\"Content-Type\": \"multipart/form-data\"}\r\n  });\r\n}\r\n\r\nexport async function UpdatePasswordByAdmin (id,user, config) {\r\n  return await axios.put(`${apiURL}/UpdatePasswordByAdmin/${ id }`, user, config )\r\n}\r\n\r\nexport async function UpdatePassword (user, config) {\r\n  return await axios.put(`${apiURL}/UpdatePassword`, user, config )\r\n}\r\n\r\nexport async function getCentersByDomain(domaine, config) {\r\n  return await axios.get(`${ apiURL }/Center/${ domaine }`, config);\r\n}\r\n\r\n// export async function getCentersByDomain(domaine, config) {\r\n//   return await axios.get(`${ apiURL }/Center/Developpement`, config);\r\n// }\r\n\r\nexport async function getInstructorsByCenter(centerId, config) {\r\n  return await axios.get(`${ apiURL }/Formateur/${ centerId }`, config);\r\n}\r\n\r\nexport async function affecterEnseignant(enseignantId, config) {\r\n  return await axios.put(`${apiURL}/affecterEnseignant/${enseignantId}`, null, config);\r\n}\r\n\r\nexport async function desinfecterFormateur(enseignantId, config) {\r\n  return await axios.put(`${apiURL}/desinfecterFormateur/${enseignantId}`, null, config);\r\n}\r\n"],"sourceRoot":""}