{"version":3,"sources":["views/FrontOffice/notification/listeNotifcation.js"],"names":["CardTable","_ref","color","jwt_token","Cookies","get","config","useMemo","headers","Authorization","concat","notifications","setNotifications","useState","loadNotifications","useCallback","async","res","getNotificationByUser","data","error","console","useEffect","interval","setInterval","clearInterval","_jsx","_Fragment","children","className","_jsxs","length","map","notification","content","type","read","vu","onClick","window","location","replace","url","_id","defaultProps"],"mappings":"6GAAA,0FASe,SAASA,EAASC,GAAa,IAAZ,MAAEC,GAAOD,EACzC,MAAME,EAAYC,IAAQC,IAAI,aAExBC,EAASC,mBAAQ,KACd,CACLC,QAAS,CACPC,cAAc,UAADC,OAAYP,OAG5B,CAACA,KAEGQ,EAAeC,GAAoBC,mBAAS,IAE7CC,EAAoBC,uBAAYC,UACpC,IACE,MAAMC,QAAYC,YAAsBZ,GACxCM,EAAiBK,EAAIE,KACvB,CAAE,MAAOC,GACPC,QAAQD,MAAM,+BAAgCA,EAChD,IACC,CAACd,IAaJ,OAXAgB,qBAAU,KACRR,IAEA,MAAMS,EAAWC,aAAY,KAC3BV,GAAmB,GAClB,KAEH,MAAO,IAAMW,cAAcF,EAAS,GACnC,CAACT,IAIFY,cAAAC,WAAA,CAAAC,SACIF,cAAA,OAAKG,UAAU,4BAA2BD,SACxCF,cAAA,OAAKG,UAAU,sCAAqCD,SAClDE,eAAA,OACED,UACE,uGACDD,SAAA,CAEDF,cAAA,OAAKG,UAAU,oCAAmCD,SAChDF,cAAA,OAAKG,UAAU,8BAA6BD,SAC1CF,cAAA,OAAKG,UAAU,mDAAkDD,SAC/DF,cAAA,MACEG,UACE,mCACDD,SACF,4BAMPF,cAAA,OAAKG,UAAU,+BAA8BD,SACjB,IAAzBjB,EAAcoB,OACbL,cAAA,OAAKG,UAAU,mBAAkBD,SAC/BF,cAAA,KAAGG,UAAU,gBAAeD,SAAC,sCAI/BE,eAAA,SAAOD,UAAU,qDAAoDD,SAAA,CACrEF,cAAA,SAAAE,SACAE,eAAA,MAAAF,SAAA,CACEF,cAAA,MAAIG,UAAU,wLAAuLD,SAAC,iBAGtMF,cAAA,MAAIG,UAAU,wLAAuLD,SAAC,SAGtMF,cAAA,MAAIG,UAAU,wLAAuLD,SAAC,OAGtMF,cAAA,MAAIG,UAAU,wLAAuLD,SAAC,OAGtMF,cAAA,MAAIG,UAAU,wLAAuLD,SAAC,iBAKxMF,cAAA,SAAAE,SACCjB,GAAiBA,EAAcqB,KAAKC,GACnCH,eAAA,MAAAF,SAAA,CACEF,cAAA,MAAIG,UAAU,6FAA4FD,SACvGK,EAAaC,UAEhBR,cAAA,MAAIG,UAAU,6FAA4FD,SACvGK,EAAaE,OAEhBT,cAAA,MAAIG,UAAU,mFAAkFD,SAC7FK,EAAaG,KAAO,MAAQ,QAE/BV,cAAA,MAAIG,UAAU,mFAAkFD,SAC7FK,EAAaI,GAAK,MAAQ,QAE7BX,cAAA,MAAIG,UAAU,mFAAkFD,SAC9FF,cAAA,UAAQG,UAAU,+CAA+CS,QAASA,IAAOC,OAAOC,SAASC,QAAQ,yBAAD/B,OAA0BuB,EAAaS,MAASd,SAAC,iBAdpJK,EAAaU,sBA2B1C,CAEA3C,EAAU4C,aAAe,CACvB1C,MAAO,Q","file":"static/js/48.fcf3a54e.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from 'react'\r\nimport PropTypes from \"prop-types\";\r\n// components\r\n\r\nimport Cookies from 'js-cookie'\r\nimport {\r\n  getNotificationByUser,\r\n} from '../../../Services/ApiNotification'\r\n\r\nexport default function CardTable({ color }) {\r\n  const jwt_token = Cookies.get('jwt_token');\r\n\r\n  const config = useMemo(() => {\r\n    return {\r\n      headers: {\r\n        Authorization: `Bearer ${jwt_token}`,\r\n      },\r\n    }\r\n  }, [jwt_token]);\r\n\r\n  const [notifications, setNotifications] = useState([]);\r\n\r\n  const loadNotifications = useCallback(async () => {\r\n    try {\r\n      const res = await getNotificationByUser(config);\r\n      setNotifications(res.data);\r\n    } catch (error) {\r\n      console.error(\"Error loading notifications:\", error);\r\n    }\r\n  }, [config]);\r\n\r\n  useEffect(() => {\r\n    loadNotifications(); // Charger les notifications lors de l'entrée dans la page\r\n\r\n    const interval = setInterval(() => {\r\n      loadNotifications(); // Rafraîchir les notifications toutes les 5 secondes\r\n    }, 5000);\r\n\r\n    return () => clearInterval(interval); // Nettoyer l'intervalle lors du démontage du composant\r\n  }, [loadNotifications]);\r\n\r\n\r\n  return (\r\n    <>\r\n        <div className=\"container mx-auto -mt-32 \">\r\n          <div className=\"flex flex-wrap justify-center py-10\">\r\n            <div\r\n              className={\r\n                \"relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded bg-lightBlue-900 text-white\"\r\n              }\r\n            >\r\n              <div className=\"rounded-t mb-0 px-4 py-3 border-0\">\r\n                <div className=\"flex flex-wrap items-center\">\r\n                  <div className=\"relative w-full px-4 max-w-full flex-grow flex-1\">\r\n                    <h3\r\n                      className={\r\n                        \"font-semibold text-lg text-white\"\r\n                      }\r\n                    >\r\n                      Mes Notifications\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"block w-full overflow-x-auto\">\r\n                {notifications.length === 0 ? (\r\n                  <div className=\"text-center py-4\">\r\n                    <p className=\"text-gray-500\">Aucune notification disponible.</p>\r\n                  </div>\r\n                ) : (\r\n\r\n                  <table className=\"items-center w-full bg-transparent border-collapse\">\r\n                  <thead>\r\n                  <tr>\r\n                    <th className=\"px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left bg-lightBlue-800 text-lightBlue-300 border-lightBlue-700\">\r\n                      Notification\r\n                    </th>\r\n                    <th className=\"px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left bg-lightBlue-800 text-lightBlue-300 border-lightBlue-700\">\r\n                      Type\r\n                    </th>\r\n                    <th className=\"px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left bg-lightBlue-800 text-lightBlue-300 border-lightBlue-700\">\r\n                      Lu\r\n                    </th>\r\n                    <th className=\"px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left bg-lightBlue-800 text-lightBlue-300 border-lightBlue-700\">\r\n                      vu\r\n                    </th>\r\n                    <th className=\"px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left bg-lightBlue-800 text-lightBlue-300 border-lightBlue-700\">\r\n                      Actions\r\n                    </th>\r\n                  </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                  {notifications && notifications.map((notification) => (\r\n                    <tr key={notification._id}>\r\n                      <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 font-bold\">\r\n                        {notification.content}\r\n                      </td>\r\n                      <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 font-bold\">\r\n                        {notification.type}\r\n                      </td>\r\n                      <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4\">\r\n                        {notification.read ? \"Oui\" : \"Non\"}\r\n                      </td>\r\n                      <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4\">\r\n                        {notification.vu ? \"Oui\" : \"Non\"}\r\n                      </td>\r\n                      <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4\">\r\n                        <button className=\"bg-red-500 text-white px-4 py-2 rounded mr-4\" onClick={() =>  window.location.replace(`http://localhost:3000/${notification.url}`)  }>Afficher</button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                  </tbody>\r\n                </table>\r\n                )}\r\n              </div>\r\n              </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n  );\r\n}\r\n\r\nCardTable.defaultProps = {\r\n  color: \"light\",\r\n};\r\n\r\nCardTable.propTypes = {\r\n  color: PropTypes.oneOf([\"light\", \"dark\"]),\r\n};\r\n"],"sourceRoot":""}